geth01 account 0x4799c873f6574b299854bfd831ae99ad2e664e30
contract address 0xbdf315ad0499d6e2b89501b9c5dc240f5938c096 <-- created in Browser-Solidity
contract address 0xc7caf784fae5840bdc893b03b7391fce6efb6190

> var abi = [{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getContractAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getCustomerId","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"payment","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"contractAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"completed","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"customerId","outputs":[{"name":"","type":"string"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"balance","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"getPayment","outputs":[{"name":"","type":"uint256"}],"payable":false,"type":"function"},{"constant":false,"inputs":[{"name":"_payment","type":"uint256"}],"name":"receivePayment","outputs":[],"payable":false,"type":"function"},{"constant":true,"inputs":[],"name":"isCompleted","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"inputs":[{"name":"_customerId","type":"string"},{"name":"_contractAmount","type":"uint256"}],"payable":false,"type":"constructor"}]
undefined
> var addr = "0xc7caf784fae5840bdc893b03b7391fce6efb6190"
undefined
> var myContract = eth.contract(abi).at(addr)
undefined
> myContract.getTimeRecord
function()
> myContract.getTimeRecord()
"08:28"
> personal.unlockAccount(eth.accounts[0], "BOSD")
true
> myContract.setTimeRecord("18:38", {from: eth.accounts[0]})
"0x322c35f57cf50765a3a404b910e3d901a2da8e9d9d46142a8a64ea99dd9c94d0"
> eth.pendingTransactions
[{
    blockHash: null,
    blockNumber: null,
    from: "0x5be060fa31a851a20a4739dc8d45619f6d292461",
    gas: 90000,
    gasPrice: 18000000000,
    hash: "0x322c35f57cf50765a3a404b910e3d901a2da8e9d9d46142a8a64ea99dd9c94d0",
    input: "0x4329d3ff0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000531383a3338000000000000000000000000000000000000000000000000000000",
    nonce: 0,
    r: "0x3accef565acfb6d802f78ec97f3d79936af893b5fdeb859521f788c27128bcaf",
    s: "0x2fdcbadf212214c71b80c2b7c3e388ab5d9b32b77eed7975699642e7559b453b",
    to: "0xe0359a20a8fe4459e0edfe5ab3e50a99612b6b96",
    transactionIndex: 0,
    v: "0x1b",
    value: 0
}]
> eth.blockNumber
341
> miner.start(1)
null
> eth.blockNumber
344
> eth.blockNumber
346
> miner.stop()

https://ethereum.stackexchange.com/questions/2404/upgradeable-smart-contracts
https://github.com/ethereum/go-ethereum/wiki/Connecting-to-the-network
https://github.com/ethereum/go-ethereum/issues/3694

